name: Trigger All Microservice Builds

on:
  workflow_dispatch:
    inputs:
      services_json:
        description: >
                     JSON array of services to trigger. Each item should have:
                     - repo: full GitHub repo
                     - workflow: workflow file name (e.g., release.yml)
                     - ref: branch or tag (e.g., main)
        required: true
        type: string
        default: >
                     [
                       { "repo": "centhro-hr-solutions/api.accounts", "workflow": "release.yaml", "ref": "develop" },
                       { "repo": "centhro-hr-solutions/Api.Approvals", "workflow": "release.yaml", "ref": "develop" },
                       { "repo": "centhro-hr-solutions/Api.Assets", "workflow": "release.yaml", "ref": "develop" }
                     ]

      promote:
        description: 'Also trigger promote workflows after build?'
        required: true
        default: false
        type: boolean

jobs:
  trigger-builds:
    name: Trigger Microservice Builds
    runs-on: ubuntu-latest

    steps:
      - name: Install jq
        run: sudo apt-get install jq -y

      - name: Trigger builds
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SERVICES_JSON: ${{ inputs.services_json }}
        run: |
              echo "Triggering build workflows in microservices..."
              echo "Services: $SERVICES_JSON"
              
              for service in $(echo "${SERVICES_JSON}" | jq -c '.[]'); do
                repo=$(echo "$service" | jq -r '.repo')
                workflow=$(echo "$service" | jq -r '.workflow')
                ref=$(echo "$service" | jq -r '.ref')
              
                echo "🚀 Triggering $workflow in $repo on $ref"
              
                curl -s -X POST https://api.github.com/repos/${repo}/actions/workflows/${workflow}/dispatches \
                  -H "Authorization: token $GITHUB_TOKEN" \
                  -H "Accept: application/vnd.github+json" \
                  -d "{\"ref\":\"$ref\"}"
              done

  promote:
    if: ${{ inputs.promote == 'true' }}
    needs: trigger-builds
    runs-on: ubuntu-latest

    steps:
      - name: Promote services (future logic)
        run: echo "🚧 Promotion step not implemented yet. Add your logic here."
